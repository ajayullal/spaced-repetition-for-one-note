{"version":3,"sources":["services/utils.service.ts","services/route.service.ts","services/config.ts","services/client-side-data-storage.service.ts","services/user.service.ts","services/error-handler.service.ts","services/microsoft-one-note.service.ts","services/index.ts","components/header/Header.tsx","components/error-alert/ErrorAlert.tsx","components/layout/layout.tsx","HOCs/withAuth.tsx","hooks/useAuth.ts","components/card-list/CardList.tsx","screens/Notebooks/Notebooks.tsx","screens/Notebooks/useBooks.ts","screens/Sections/Sections.tsx","screens/Sections/useSections.ts","screens/Pages/Pages.tsx","screens/Pages/usePages.ts","screens/Timer/QuitDialog.tsx","screens/Timer/Timer.tsx","screens/index.ts","screens/Login/Login.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["UtilsService","url","params","Object","entries","forEach","key","value","replace","_instance","getInstance","routeConfig","notebooks","name","path","isHomePage","icon","Book","sections","MenuBook","login","pages","Note","timer","Timer","breadCrumbs","RouteService","routeName","homeRoute","find","route","routeInfo","this","getRouteInfo","serverBase","utilsService","replaceParamsInUrl","window","location","href","getRouteUrl","gotoUrl","msalConfig","auth","clientId","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","themeConfig","drawerWidth","r","ClientSideDataStorage","storage","localforage","createInstance","localStorage","setItem","removeItemSync","getItem","removeItem","UserService","_userDetails","userDetails","clientStorage","getItemSync","JSON","parse","Boolean","details","_userService","errorMessage","ErrorHandlerService","handleError","error","message","logout","Promise","reject","response","data","userService","routerService","axios","_axios","create","baseURL","headers","interceptors","use","apiEndPoints","MicrosoftOneNoteApi","_redirectUrl","_db","_dbCellDelimiter","myMSALObj","requestObj","scopes","Msal","checkAndSetPersistedBearerToken","console","log","tokenType","accessToken","tokenResponse","setBearerToken","setUserDetails","acquireTokenSilent","then","onToken","catch","alert","acquireTokenPopup","setItemSync","stringify","handleRedirectCallback","authRedirectCallBack","loginPopup","loginResponse","token","defaults","common","resp","get","returnValue","errorHandlerService","notebookId","id","sectionId","selfUrl","sessionDetails","patch","startDate","startTime","title","minutesSpentLearning","totalSessionMinutes","repetition","resolve","getDb","db","doc","DOMParser","parseFromString","ps","Array","from","getElementsByTagName","_rows","p","content","textContent","split","push","trim","Number","contentUrl","microsoftOneNoteApi","_routerService","pageName","hideNavDrawer","history","classes","makeStyles","theme","createStyles","appBar","breakpoints","up","width","marginLeft","menuButton","marginRight","spacing","display","homeButton","toolbar","justifyContent","padding","paddingRight","useStyles","React","useState","className","account","AccountCircle","onClick","AppBar","position","Toolbar","Typography","variant","noWrap","IconButton","color","aria-label","edge","getHomeRoute","Home","style","top","isLoggedIn","useEffect","marginTop","props","elevation","severity","root","mixins","flexGrow","link","height","breadcrumb","marginBottom","withRouter","children","CssBaseline","ErrorAlert","Header","Component","mons","redirectUrl","match","card","cursor","items","displayPropName","length","Grid","container","map","item","xs","md","Card","CardContent","gutterBottom","component","withAuth","noteBooks","setNoteBooks","setErrorMessage","microsoftOneNoteService","getAllNoteBooks","allBooks","useBooks","noteBooksGrid","CardList","noteBook","goTo","LinearProgress","useSections","getAllSection","filteredSections","setFilteredSections","sectionsGrid","TextField","label","onChange","event","searchTxt","target","toLowerCase","_filteredSections","filter","section","displayName","startsWith","setPages","loading","setLoading","getAllPages","finally","usePages","filteredPages","setFilteredPages","timerUrl","_filteredPages","page","encodeURIComponent","self","open","onClose","onQuit","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogActions","Button","autoFocus","table","minWidth","Login","onSignInSuccess","useLayoutEffect","onSignIn","xmlns","viewBox","fill","d","x","y","Notebooks","Sections","Pages","sliderValue","setSliderValue","isTicking","setTicking","timeLeft","setTimeLeft","timeLeftPercent","setTimeLeftPercent","openQuitDialog","setQuitDialog","rows","setRows","totalMinutes","setTotalMinutes","revisionMode","setRevisionMode","timeElapsedTxt","setTimeElapsedTxt","startMillis","useRef","Date","sliderValueRef","counterIntervalRef","pageDetails","revisionClicked","pageUrl","URLSearchParams","search","getPage","_pageDetails","current","getAllDBRows","_totalMinutes","row","PrettoSlider","withStyles","thumb","backgroundColor","border","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","getTimeLeftTxt","totalMillis","totalSecondsLeft","now","getTime","minutesLeft","Math","trunc","secondsLeft","ceil","getPercentTimeLeft","getRowDetails","totalMillisSpeantLeaning","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","stopTimer","useCallback","rowDetails","updateOneNotePage","clearInterval","startTimer","setInterval","studyHistory","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","index","opacity","getRevisionTime","seconds","minutes","revisionSwitch","FormControl","FormGroup","FormControlLabel","control","Switch","checked","isRevisionMode","studyModeHeader","studyModeSlider","useMemo","minHeight","paddingTop","paddingBottom","valueBuffer","valueLabelDisplay","min","step","max","defaultValue","checkAndStartTimer","time","getTimeElapsedTxt","timerButtons","revisionModeHeader","QuitDialog","revisionTime","checkAndSetRevisionMode","App","document","exact","Screens","to","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8YAAMA,E,2GAGgBC,EAAaC,GAK3B,OAJAC,OAAOC,QAAQF,GAAQG,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXC,EAAW,KAC7CN,EAAMA,EAAIO,QAAJ,WAAgBF,GAAOC,MAG1BN,K,qCAQP,OAJID,EAAaS,YACbT,EAAaS,UAAY,IAAIT,GAG1BA,EAAaS,c,KAhBtBT,EACKS,e,EAmBIT,I,EAAAA,IAAaU,c,oCChBfC,EAAuC,CAChDC,UAAW,CACPC,KAAM,YACNC,KAAM,aACNC,YAAY,EACZC,KAAMC,KAEVC,SAAU,CACNL,KAAM,WACNC,KAAM,iBACNE,KAAMG,KAEVC,MAAO,CACHP,KAAM,QACNC,KAAM,UAEVO,MAAO,CACHR,KAAM,QACNC,KAAM,sBACNE,KAAMM,KAEVC,MAAO,CACHV,KAAM,QACNC,KAAM,SACNE,KAAMQ,MAIDC,GAAiC,mBACzCd,EAAYO,SAASL,KAAO,CAACF,EAAYC,YADA,cAEzCD,EAAYU,MAAMR,KAAO,CAACF,EAAYC,UAAWD,EAAYO,WAFpB,GAKxCQ,E,uGAGaC,GACX,OAAOF,EAAYE,K,qCAInB,IAAIC,EAAYzB,OAAOC,QAAQO,GAAakB,MAAK,SAACC,GAAD,OAAgBA,EAAM,GAAGf,cAC1E,OAAOa,EAAWA,EAAU,GAAK,O,mCAGxBf,GACT,OAAOF,EAAYE,K,kCAGXA,GAA+B,IAAjBX,EAAgB,uDAAH,GAC7B6B,EAAYC,KAAKC,aAAapB,GAEpC,MAAM,GAAN,OAAUqB,EAAV,aAAyBC,EAAaC,mBAAmBL,EAAUjB,KAAMZ,M,8BAGrED,GACJoC,OAAOC,SAASC,KAAOtC,I,2BAGtBY,GAA+B,IAAjBX,EAAgB,uDAAH,GACtBD,EAAM+B,KAAKQ,YAAY3B,EAAMX,GACnC8B,KAAKS,QAAQxC,M,qCAQb,OAJIyB,EAAajB,YACbiB,EAAajB,UAAY,IAAIiB,GAG1BA,EAAajB,c,KApCtBiB,EACKjB,e,EAuCIiB,QAAahB,cC1EfwB,EAAa,wBAGbQ,EAAiC,CAC1CC,KAAM,CACFC,SAAU,uCACVC,UAAW,2CAEXC,YAAY,GAAD,OAAKZ,EAAL,eAEfa,MAAO,CACHC,cAAe,iBACfC,wBAAwB,IAInBC,EAAc,CACvBC,YAAa,KAYJxC,EAAcyC,E,iBC9BrBC,E,iDACMC,QAAUC,IAAYC,eAAe,CACzC3C,KAAM,a,wDAGEP,EAAYC,GACjBA,EACCkD,aAAaC,QAAQpD,EAAKC,GAE1ByB,KAAK2B,eAAerD,K,kCAIhBA,GACR,OAAOmD,aAAaG,QAAQtD,K,qCAGjBA,GACX,OAAOmD,aAAaI,WAAWvD,K,8BAG3BA,EAASC,GACbyB,KAAKsB,QAAQI,QAAQpD,EAAKC,K,8BAGtBD,GACJ,OAAO0B,KAAKsB,QAAQM,QAAQtD,K,iCAGrBA,GACP,OAAO0B,KAAKsB,QAAQO,WAAWvD,M,qCAU/B,OAJK+C,EAAsB5C,YACvB4C,EAAsB5C,UAAY,IAAI4C,GAGnCA,EAAsB5C,c,KAxC/B4C,EAiCK5C,e,EAWI4C,QAAsB3C,c,yBC5C/BoD,E,WAIF,aAAc,yBAFdC,kBAEa,EACT,IAAMC,EAAcC,EAAcC,YAAY,eAE3CF,IACChC,KAAK+B,aAAeI,KAAKC,MAAMJ,I,yDAanC,OAAOK,QAAQJ,EAAcC,YAAY,Y,+BAIzC,OAAOG,QAAQJ,EAAcN,eAAe,Y,gCAbhCW,GACZtC,KAAK+B,aAAeO,G,eAIpB,OAAOtC,KAAK+B,gB,qCAgBZ,OAJKD,EAAYS,eACbT,EAAYS,aAAe,IAAIT,GAG5BA,EAAYS,iB,KAjCrBT,EACKS,kB,EAoCIT,QAAYpD,cCrCrB8D,EACG,sCAGHC,E,WAGF,aAAe,IAAD,gCASdC,YAAc,SAACC,GACX,OAAQA,EAAMC,SACV,KAAKJ,EAAqB,EAAKK,SAGnC,OAAOC,QAAQC,OAAOJ,EAAMC,SAAWD,EAAMK,SAASC,KAAKL,U,qDAT3DM,GAAYL,SACZxC,OAAOC,SAAS9B,QAAQ2E,GAAc3C,YAAY,a,qCAelD,OAHKiC,EAAoBhE,YACrBgE,EAAoBhE,UAAY,IAAIgE,GAEjCA,EAAoBhE,c,KAxB7BgE,EACKhE,e,EA2BIgE,QAAoB/D,cCzB7B0E,EAAQC,IAAOC,OAAO,CACxBC,QAAS,8CACTC,QAAS,KAKbJ,EAAMK,aAAaT,SAASU,KAAI,SAAAV,GAAQ,OAAIA,EAASC,QAAM,SAAAN,GAAK,OAAIG,QAAQC,OAAOJ,MAEnF,IAAMgB,EACS,aADTA,EAEQ,0BAFRA,EAGK,8BAHLA,EAIO,4EAGPC,G,WAqBF,aAAe,yBApBPC,aAA8B,KAoBxB,KAnBNC,SAmBM,OAlBNC,iBAAmB,MAkBb,KARdC,eAQc,OAJdC,WAAa,CACTC,OAAQ,CAAC,mBAITlE,KAAKgE,UAAY,IAAIG,IAA0BzD,GAC/CV,KAAKoE,kC,wDAjBL,OAAOpE,KAAK6D,c,aAGOtF,GACnByB,KAAK6D,aAAetF,M,0DAgBHoE,EAAYK,GACzBL,EACA0B,QAAQC,IAAI3B,GAGe,iBAAvBK,EAASuB,UACTF,QAAQC,IAAItB,EAASwB,aAErBH,QAAQC,IAAI,iBAAmBtB,EAASuB,a,8BAK5CE,GACJzE,KAAK0E,eAAeD,EAAcD,aAClCxE,KAAK2E,eAAezB,EAAYlB,aAChC3B,OAAOC,SAASC,KAAO4C,EAAc3C,YAAY,e,0CAGhC,IAAD,OAEhBR,KAAKgE,UAAUY,mBAAmB5E,KAAKiE,YAAYY,MAAK,SAACJ,GACrD,EAAKK,QAAQL,MACdM,OAAM,SAACpC,GACNqC,MAAMrC,GACN,EAAKqB,UAAUiB,kBAAkB,EAAKhB,YAAYY,MAAK,SAACJ,GACpD,EAAKK,QAAQL,MACdM,OAAM,SAACpC,GACNqC,MAAMrC,W,qCAKHX,GACXC,EAAciD,YAAY,cAAe/C,KAAKgD,UAAUnD,M,iCAGhD,IAAD,OAGP,OAFAhC,KAAKgE,UAAUoB,uBAAuBpF,KAAKqF,sBAEpCrF,KAAKgE,UAAUsB,WAAWtF,KAAKiE,YAAYY,MAAK,SAACU,GACpD,EAAKN,uBACNF,OAAM,SAACpC,GACNqC,MAAMrC,Q,wDAKV,IAAM6C,EAAQvD,EAAcC,YAAY,SAEpCsD,IACApC,EAAMqC,SAASjC,QAAQkC,OAAvB,+BAA2DF,M,qCAIpDA,GACXpC,EAAMqC,SAASjC,QAAQkC,OAAvB,+BAA2DF,GAC3DvD,EAAciD,YAAY,QAASM,K,kCAGnBG,GAChB,OAAOA,EAAKpH,Q,wCAIZ,OAAO6E,EAAMwC,IAAIjC,GAAwBkB,KAAK7E,KAAK6F,aAAad,MAAMe,EAAoBpD,e,oCAGhFqD,GACV,OAAO3C,EAAMwC,IAAIzF,EAAaC,mBAAmBuD,EAAuB,CAAEqC,GAAID,KAAelB,KAAK7E,KAAK6F,aAAad,MAAMe,EAAoBpD,e,kCAGtIuD,GACR,OAAO7C,EAAMwC,IAAIzF,EAAaC,mBAAmBuD,EAAoB,CAAEqC,GAAIC,KAAcpB,KAAK7E,KAAK6F,aAAad,MAAMe,EAAoBpD,e,8BAGtIwD,GACJ,OAAO9C,EAAMwC,IAAIM,GAASnB,MAAMe,EAAoBpD,e,wCAGtCyD,GAAsB,IAAD,OACnC,OAAO/C,EAAMgD,MAAMzC,EACf,CACI,CACI,OAAS,OACT,OAAS,SACT,QAAU,MAAV,OAAiBwC,EAAeE,WAAhC,OAA4CrG,KAAK+D,iBAAjD,YAAqEoC,EAAeG,WAApF,OAAgGtG,KAAK+D,iBAArG,YAAyHoC,EAAeI,OAAxI,OAAgJvG,KAAK+D,iBAArJ,YAAyKoC,EAAeK,sBAAxL,OAA+MxG,KAAK+D,iBAApN,YAAwOoC,EAAeM,qBAAvP,OAA6QzG,KAAK+D,iBAAlR,YAAsSoC,EAAeO,WAArT,WAGV7B,MAAK,SAAA5B,GAAI,OAAI,EAAKa,IAAM,QAAMiB,MAAMe,EAAoBpD,e,qCAG/C,IAAD,OACV,OAAO,IAAII,SAAQ,SAAC6D,EAAS5D,GACzB,EAAK6D,QAAQ/B,MAAK,SAACgC,GACf,IAAIC,GAAM,IAAIC,WAAYC,gBAAgBH,EAAI,YACxCI,EAAKC,MAAMC,KAAKL,EAAIM,qBAAqB,MACzCC,EAAe,GACrBJ,EAAG5I,SAAQ,SAAAiJ,GAAM,IAAD,EACRC,GAAW,OAADD,QAAC,IAADA,OAAA,YAAAA,EAAGE,mBAAH,eAAgBC,MAAM,EAAK1D,oBAAqB,GAChEsD,EAAMK,KAAK,CACTrB,UAAWkB,EAAUA,EAAQ,GAAK,GAClCjB,UAAWiB,EAAUA,EAAQ,GAAK,GAClChB,MAAOgB,EAAUA,EAAQ,GAAGI,OAAS,GACrCnB,qBAAsBe,EAAUK,OAAOL,EAAQ,IAAM,GACrDd,oBAAqBc,EAAUA,EAAQ,GAAK,GAC5Cb,WAAYa,EAAiC,UAAtBA,EAAQ,GAAGI,OAAoB,KAAM,MAAS,QAGzEhB,EAAQU,MACPtC,MAAMhC,Q,8BAIX,IAAD,OACH,OAAG/C,KAAK8D,IACGhB,QAAQ6D,QAAQ3G,KAAK8D,KAErBV,EAAMwC,IAAIjC,GAAsBkB,MAAK,SAAAgC,GACxC,OAAO,EAAK/C,IAAM+C,O,qCAKfgB,GACX,OAAOzE,EAAMwC,IAAIiC,GAAY9C,MAAMe,EAAoBpD,gB,qCAQvD,OAJKkB,EAAoBkE,sBACrBlE,EAAoBkE,oBAAsB,IAAIlE,GAG3CA,EAAoBkE,wB,KA/J7BlE,GAcKkE,yB,EAqJIlE,UAAoBlF,cCpLtByE,GAAgB4E,EAChB7E,GAAcX,EC6BZ,eAA4D,IAAD,EAAxDyF,EAAwD,EAAxDA,SAAwD,IAA9CC,qBAA8C,SAAvBC,EAAuB,EAAvBA,QACzCC,EA9BQ,SAACF,GACf,OAAOG,aAAW,SAACC,GAAD,OACdC,YAAa,CACTC,OAAO,eACFF,EAAMG,YAAYC,GAAG,MAAQ,CAC1BC,MAAOT,EAAgB,OAAH,sBAA2B/G,EAAYC,YAAvC,OACpBwH,WAAYzH,EAAYC,cAGhCyH,WAAW,aACPC,YAAaR,EAAMS,QAAQ,IAC1BT,EAAMG,YAAYC,GAAG,MAAQ,CAC1BM,QAAS,SAGjBC,WAAY,CACRL,WAAY,OACZE,YAAa,OAEjBI,QAAS,CACLF,QAAS,OACTG,eAAgB,gBAChBC,QAAS,MACTC,aAAc,aAOVC,CAAUpB,EAAVoB,GADsD,EAElCC,IAAMC,UAAS,GAFmB,mBAiBhEvH,GAjBgE,UAiBjD,yBAAKwH,UAAU,mBAChC,0BAAMA,UAAU,aAAhB,UAA6BtG,GAAYlB,mBAAzC,aAA6B,EAAyByH,QAAQ5K,MAC9D,kBAAC6K,EAAA,EAAD,MACA,0BAAMC,QARK,WACXzG,GAAYL,SACZqF,EAAQR,KAAKvE,GAAc3C,YAAY,WAMhBgJ,UAAU,UAAjC,YAGJ,OACI,oCACI,kBAACI,EAAA,EAAD,CAAQC,SAAS,QAAQL,UAAWrB,EAAQI,QACxC,kBAACuB,EAAA,EAAD,CAASN,UAAWrB,EAAQc,SAUxB,kBAACc,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,GAC3B,oCACI,kBAACC,EAAA,EAAD,CACIC,MAAM,UACNC,aAAW,cACXC,KAAK,QACLb,UAAWrB,EAAQa,WACnBW,QApCX,WACb,IAAI/J,EAAYuD,GAAcmH,eAC9BpC,EAAQR,KAAK9H,EAAUd,QAmCC,kBAACyL,EAAA,EAAD,OAEJ,0BAAMC,MAAO,CAAEX,SAAU,WAAYY,IAAK,QAAUzC,KAI3D9E,GAAYwH,aAAe1I,EAAc,S,UCrF/C,eAA0B,IAAxBQ,EAAuB,EAAvBA,aACbmI,qBAAU,cAAU,CAACnI,IAczB,OACQ,oCACKA,EACG,yBAAKgI,MAAO,CACRI,UAAW,OACXlC,MAAO,OACPC,WAAY,SAEZ,mBApBhB,SAAekC,GACX,OAAO,kBAAC,KAAD,eAAUC,UAAW,EAAGd,QAAQ,UAAaa,MAmBxC,CAAOE,SAAS,SACXvI,IAGV,OCrBT6G,GAAYjB,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX0C,KAAM,CACJjC,QAAS,QAEXE,QAASZ,EAAM4C,OAAOhC,QACtB1B,QAAS,CACP2D,SAAU,EACV/B,QAASd,EAAMS,QAAQ,IAEzBqC,KAAM,CACJpC,QAAS,QAEX/J,KAAM,CACJ6J,YAAaR,EAAMS,QAAQ,IAC3BJ,MAAO,GACP0C,OAAQ,IAEVC,WAAY,CACVC,aAAc,SAKLC,gBAAW,YAA6F,IAA3E/I,EAA0E,EAA1EA,aAAczC,EAA4D,EAA5DA,UAAWyL,EAAiD,EAAjDA,SAAiD,IAAvCvD,qBAAuC,SAAhBC,EAAgB,EAAhBA,QAC9FC,EAAUkB,KAEhB,OACE,yBAAKG,UAAWrB,EAAQ6C,MACtB,kBAACS,EAAA,EAAD,MAEA,kBAACC,GAAD,CAAYlJ,aAAcA,IAE1B,kBAACmJ,GAAD,CAAQzD,QAASA,EAASD,cAAeA,EAAeD,SAAUjI,EAAUlB,OAE5E,0BAAM2K,UAAWrB,EAAQZ,SACvB,yBAAKiC,UAAWrB,EAAQc,UACvBuC,O,UC1CM,YAACI,GAAD,OAAoB,SAACf,GAAgB,ICCpC3C,EDDmC,GCCnCA,EDAsB2C,EAAM3C,QCCpChF,EAAYwH,aAKT,EAAC,IAJJxC,EAAQR,KAAK/I,EAAYS,MAAMN,MACxB,EAAC,KDDZ,OAH+C,qBAO3C+M,GAAKC,YAAc,KACZ,kBAACF,EAAcf,KAJtBgB,GAAKC,YAAcjB,EAAMkB,MAAM9N,IACxB,Q,8BELToL,GAAYjB,YAAW,CACzB4D,KAAM,CACFC,OAAQ,aAKD,eAAiD,IAA/CC,EAA8C,EAA9CA,MAAOvC,EAAuC,EAAvCA,QAASwC,EAA8B,EAA9BA,gBACvBhE,GADqD,EAAbnC,GAC9BqD,MAEhB,OACI6C,EAAME,OAAS,EACd,kBAACC,GAAA,EAAD,CAAMvD,QAAS,EAAGwD,WAAS,GAEpBJ,EAAMK,KAAI,SAACC,GACP,OACI,kBAACH,GAAA,EAAD,CAAM1C,QAAS,kBAAMA,EAAQ6C,IAAOC,GAAI,GAAID,MAAI,EAACE,GAAI,EAAGpO,IAAKkO,EAAKxG,IAC9D,kBAAC2G,GAAA,EAAD,CAAMnD,UAAWrB,EAAQ6D,KAAMhC,QAAQ,YACnC,kBAAC4C,GAAA,EAAD,KACI,kBAAC7C,EAAA,EAAD,CAAYI,MAAM,gBAAgB0C,cAAY,GACzCL,EAAKL,WAStC,kBAACpC,EAAA,EAAD,CAAYC,QAAQ,KAAK8C,UAAU,KAAK3C,MAAM,gBAAgB0C,cAAY,GAA1E,uBCzBOE,OAAS,SAAClC,GAAgB,IAAD,ECLzB,WAAO,IAAD,EACetB,mBAAS,MADxB,mBACZyD,EADY,KACDC,EADC,OAEqB1D,mBAAS,MAF9B,mBAEZ/G,EAFY,KAEE0K,EAFF,KAajB,OATAvC,qBAAU,WACNwC,GAAwBC,kBAAkBvI,MAAK,SAACwI,GAC5CJ,EAAaI,MACdtI,OAAM,SAACpC,GACNuK,EAAgBvK,QAGrB,IAEI,CAACqK,EAAWxK,GDPe8K,GADE,mBAC7BN,EAD6B,KAClBxK,EADkB,KAO9B+K,EAAiB,kBAACC,GAAD,CAAUrB,gBAAgB,cAAcxC,QAJ1C,SAAC8D,GAClBtK,EAAcuK,KAAK,WAAY,CAAE1H,GAAIyH,EAASzH,MAGoCkG,MAAOc,GAAa,KAE1G,OACI,kBAAC,GAAD,CACIxK,aAAcA,EACdyF,eAAe,EACflI,UAAWoD,EAAclD,aAAa,cAEjC+M,EAAqDO,EAAxC,kBAACI,GAAA,EAAD,CAAgBxD,MAAM,kB,mBEfrC4C,OAAS,SAAClC,GAAgB,IAAD,ECLzB,SAAC9E,GAAuB,IAAD,EACJwD,mBAAS,IADL,mBAC7BrK,EAD6B,KACnB0O,EADmB,KASlC,OANAjD,qBAAU,WACNkB,GAAKgC,cAAc9H,GAAYlB,MAAK,SAAC3F,GACjC0O,EAAY1O,QAEjB,CAAC6G,IAEG,CAAC7G,GDHW0O,CAAY/C,EAAMkB,MAAM7N,OAAO8H,IAA3C9G,EAD6B,sBAEYqK,mBAAS,IAFrB,mBAE7BuE,EAF6B,KAEXC,EAFW,KAIpCpD,qBAAU,WACNoD,EAAoB7O,KACrB,CAACA,IAMJ,IAAM8O,EACF,oCACI,kBAAC3B,GAAA,EAAD,CAAMC,WAAS,EAACxD,QAAS,GACrB,kBAACuD,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACwB,GAAA,EAAD,CACIzE,UAAU,YACVxD,GAAG,qBACHkI,MAAM,kBACNlE,QAAQ,WACRmE,SAAU,SAACC,GACP,IAAMC,EAAYD,EAAME,OAAO/P,MAAMgQ,cAE/BC,EAAoBtP,EAASuP,QAAO,SAACC,GAEvC,OADoBA,EAAQC,YAAYJ,cACrBK,WAAWP,MAGlCN,EAAoBS,OAKhC,kBAACnC,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACe,GAAD,CAAUrB,gBAAgB,cAAcxC,QA3BxD,SAAmB+E,GACfvL,EAAcuK,KAAK,QAAS,CAAC1H,GAAI0I,EAAQ1I,MA0B+BkG,MAAO4B,GAAoB,QAMvG,OACI,kBAAC,GAAD,CAAQ7F,eAAe,EAAMlI,UAAWoD,EAAclD,aAAa,aAC/D,qCAEgB,OAARf,QAAQ,IAARA,OAAA,EAAAA,EAAUkN,QAAS,EAAI4B,EAAgB,kBAACL,GAAA,EAAD,CAAgBxD,MAAM,mBE5ClE4C,I,OAAAA,IAAS,SAAClC,GAAgB,IAAD,ECNzB,SAAC5E,GAAuB,IAAD,EACVsD,mBAAS,IADC,mBAC7BlK,EAD6B,KACtBwP,EADsB,OAENtF,oBAAS,GAFH,mBAE7BuF,EAF6B,KAEpBC,EAFoB,KAYlC,OARApE,qBAAU,WACNkB,GAAKmD,YAAY/I,GAAWpB,MAAK,SAACxF,GAC9BwP,EAASxP,MACV4P,SAAQ,WACPF,GAAW,QAEhB,CAAC9I,IAEG,CAAC5G,EAAOyP,GDLiBI,CAASrE,EAAMkB,MAAM7N,OAAO8H,IADxB,mBAC7B3G,EAD6B,KACtByP,EADsB,OAEMvF,mBAASlK,GAFf,mBAE7B8P,EAF6B,KAEdC,EAFc,KAG9BC,EAAWlM,EAAc3C,YAAY,SAE3CmK,qBAAU,WACNyE,EAAiB/P,KAElB,CAACA,IAMJ,IAAM2O,EACF,oCACI,kBAAC3B,GAAA,EAAD,CAAMC,WAAS,EAACxD,QAAS,GACrB,kBAACuD,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACwB,GAAA,EAAD,CACIzE,UAAU,YACVxD,GAAG,qBACHkI,MAAM,eACNlE,QAAQ,WACRmE,SAAU,SAACC,GACP,IAAMC,EAAYD,EAAME,OAAO/P,MAAMgQ,cAE/Be,EAAiBjQ,EAAMoP,QAAO,SAACc,GAEjC,OADkBA,EAAKhJ,MAAMgI,cACZK,WAAWP,MAGhCe,EAAiBE,OAK7B,kBAACjD,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACe,GAAD,CAAUrB,gBAAgB,QAAQxC,QA3BlD,SAAsB4F,GAClBpM,EAAc1C,QAAd,UAAyB4O,EAAzB,oBAA6CG,mBAAmBD,EAAKE,SA0BAvD,MAAOiD,OAMhF,OACI,kBAAC,GAAD,CAAQlH,eAAe,EAAMlI,UAAWoD,EAAclD,aAAa,UAC/D,oCAEQ6O,EAAW,kBAACnB,GAAA,EAAD,CAAgBxD,MAAM,cAAkB6D,Q,wIErDxD,eAAmC,IAAjC0B,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAC5B,OACI,6BACI,kBAACC,GAAA,EAAD,CACIH,KAAMA,EACNI,kBAAgB,qBAChBC,mBAAiB,4BACjB,kBAACC,GAAA,EAAD,CAAahK,GAAG,sBAAsB,kCAEtC,kBAACiK,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQvG,QAASgG,EAASxF,MAAM,WAAhC,SACA,kBAAC+F,GAAA,EAAD,CAAQvG,QAASiG,EAAQzF,MAAM,UAAUgG,WAAS,GAAlD,Y,0DCAd9G,GAAYjB,YAAW,CAC3BgI,MAAO,CACLC,SAAU,OCVC,IACXC,MCCW,SAACzF,GAOZ,SAAS0F,IACLpN,GAAcuK,KAAK,aAIvB,OAXA8C,2BAAgB,WACRtN,GAAYwH,cACZvH,GAAcuK,KAAK,eAExB,CAAC7C,EAAM3C,UAQN,oCACI,kBAAC,GAAD,CAAQD,eAAe,EAAMlI,UAAWoD,GAAclD,aAAa,UAC/D,yBAAKuJ,UAAU,iBAAiBG,QAAS,kBAAMkC,GAAK4E,WAAW5L,KAAK0L,KAC5D,yBAAKG,MAAM,6BAA6BhI,MAAM,MAAM0C,OAAO,KAAKuF,QAAQ,cAAa,kDAA8B,0BAAMjI,MAAM,MAAM0C,OAAO,KAAKwF,KAAK,SAAQ,0BAAMC,EAAE,oCAAoCD,KAAK,YAAW,0BAAMC,EAAE,6iCAA6iCD,KAAK,YAAW,0BAAMC,EAAE,uOAAuOD,KAAK,YAAW,0BAAMC,EAAE,ohBAAohBD,KAAK,YAAW,0BAAMC,EAAE,sNAAsND,KAAK,YAAW,0BAAMC,EAAE,sOAAsOD,KAAK,YAAW,0BAAMC,EAAE,mNAAmND,KAAK,YAAW,0BAAMC,EAAE,+SAA+SD,KAAK,YAAW,0BAAMC,EAAE,yOAAyOD,KAAK,YAAW,0BAAMC,EAAE,sNAAsND,KAAK,YAAW,0BAAMC,EAAE,uLAAuLD,KAAK,YAAW,0BAAMC,EAAE,2QAA2QD,KAAK,YAAW,0BAAMC,EAAE,yOAAyOD,KAAK,YAAW,0BAAMC,EAAE,+VAA+VD,KAAK,YAAW,0BAAMC,EAAE,+MAA+MD,KAAK,YAAW,0BAAMC,EAAE,ubAAubD,KAAK,YAAW,0BAAMC,EAAE,+1BAA+1BD,KAAK,YAAW,0BAAMC,EAAE,qcAAqcD,KAAK,YAAW,0BAAMC,EAAE,8MAA8MD,KAAK,YAAW,0BAAMC,EAAE,6MAA6MD,KAAK,YAAW,0BAAME,EAAE,KAAKC,EAAE,KAAKrI,MAAM,IAAI0C,OAAO,IAAIwF,KAAK,YAAW,0BAAME,EAAE,KAAKC,EAAE,KAAKrI,MAAM,IAAI0C,OAAO,IAAIwF,KAAK,YAAW,0BAAME,EAAE,KAAKC,EAAE,KAAKrI,MAAM,IAAI0C,OAAO,IAAIwF,KAAK,YAAW,0BAAME,EAAE,KAAKC,EAAE,KAAKrI,MAAM,IAAI0C,OAAO,IAAIwF,KAAK,iBDhBn4OI,aACAC,YACAC,SACA1R,MDSW,SAACqL,GAAgB,IAAD,EACOtB,mBAAS,IADhB,mBACxB4H,EADwB,KACXC,EADW,OAEC7H,oBAAS,GAFV,mBAExB8H,EAFwB,KAEbC,EAFa,OAGC/H,qBAHD,mBAGxBgI,EAHwB,KAGdC,EAHc,OAIejI,mBAAS,GAJxB,mBAIxBkI,EAJwB,KAIPC,EAJO,OAKSnI,oBAAS,GALlB,mBAKxBoI,EALwB,KAKRC,EALQ,OAMOrI,mBAAS,IANhB,mBAMxBsI,EANwB,KAMlBC,EANkB,OAOCvI,oBAAS,GAPV,mBAOtBuF,EAPsB,KAObC,EAPa,OAQWxF,qBARX,mBAQtBwI,EARsB,KAQRC,EARQ,OASWzI,oBAAS,GATpB,mBAStB0I,EATsB,KASRC,EATQ,OAUe3I,mBAAS,IAVxB,mBAUtB4I,EAVsB,KAUNC,EAVM,KAYvBC,EAAcC,iBAAO,IAAIC,MACzBC,EAAiBF,iBAAO,IACxBG,EAA0BH,mBAC1BI,EAAcJ,iBAAO,CAAE/L,MAAO,KAC9BoM,EAAkBL,kBAAO,GAEzBnK,EAAUkB,KAEhBsB,qBAAU,WACR,IACMiI,EADS,IAAIC,gBAAgBhI,EAAMvK,SAASwS,QAC3BlN,IAAI,WAEvBgN,EACF/G,GAAKkH,QAAQH,GAAS/N,MAAK,SAACmO,GAG1B,OAFAN,EAAYO,QAAUD,EAEfnH,GAAKqH,eAAerO,MAAK,SAACgN,GAC/B,IAAIsB,EAAgB,EACd9L,EAAa,GAEnBwK,EAAKxT,SAAQ,SAAA+U,IACI,OAAXV,QAAW,IAAXA,OAAA,EAAAA,EAAaO,QAAQ1M,SAAU6M,EAAI7M,QACrC4M,GAAiBC,EAAI5M,qBACrBa,EAAMK,KAAK0L,OAIfpB,EAAgBmB,GAChBrB,EAAQzK,SAET4H,SAAQ,WACTF,GAAW,MAGb5L,EAAcuK,KAAKvK,EAAcmH,eAAd,KAAqCiE,iBAGzD,IAEH,IAAM8E,EAAeC,aAAW,CAC9BtI,KAAM,CACJb,MAAO,kBACPiB,OAAQ,GAEVmI,MAAO,CACLnI,OAAQ,GACR1C,MAAO,GACP8K,gBAAiB,OACjBC,OAAQ,yBACR7I,WAAY,EACZjC,YAAa,GACb,2BAA4B,CAC1B+K,UAAW,YAGfC,OAAQ,GACRC,WAAY,CACVC,KAAM,oBAERC,MAAO,CACL1I,OAAQ,EACR2I,aAAc,GAEhBC,KAAM,CACJ5I,OAAQ,EACR2I,aAAc,IA1BGT,CA4BlBW,MAEGC,EAAiB,SAACC,GACtB,IAEIC,GADeD,GADa5B,KAAK8B,MAAQhC,EAAYY,QAAQqB,YAE5B,IACjCC,EAAcC,KAAKC,MAAML,EAAmB,IAC5CM,EAAcF,KAAKG,KAAKP,EAAkC,GAAdG,GAChD,MAAM,GAAN,OAAUA,EAAV,wBAAqCG,EAArC,kBAGIE,GAAqB,SAACT,GAG1B,OADmBA,GADa5B,KAAK8B,MAAQhC,EAAYY,QAAQqB,YAE5CH,EAAe,KAGhCU,GAAgB,SAACC,EAAkCX,GAIvD,MAAO,CACL9N,UAJa,UAAMgM,EAAYY,QAAQ8B,UAA1B,YAAuC1C,EAAYY,QAAQ+B,WAAa,EAAxE,YAA6E3C,EAAYY,QAAQgC,eAK9G3O,UAJa,UAAM+L,EAAYY,QAAQiC,WAA1B,YAAwC7C,EAAYY,QAAQkC,aAA5D,YAA4E9C,EAAYY,QAAQmC,cAK7G7O,MAAOmM,EAAYO,QAAQ1M,MAC3BE,oBAAqB0N,EAAe,IACpC3N,qBAAsBsO,EAA4B,IAClDpO,YAAY,IAIV2O,GAAYC,uBAAY,WAC5B,IAAMnB,EAAuC,GAAzB3B,EAAeS,QAAe,IAC5C6B,EAA4BvC,KAAK8B,MAAQhC,EAAYY,QAAQqB,UAC7DiB,EAAaV,GAAcC,EAA0BX,GAG3DtI,GAAK2J,kBAAkBD,GAAY1Q,MAAK,WACtCiN,GAAQ,SAACD,GAAD,6BAAmBA,GAAnB,iBAA6B0D,EAA7B,CAAyC7O,WAAY,eAG/D+O,cAAchD,EAAmBQ,SACjC3B,GAAW,KAGV,IAEGoE,GAAaJ,uBAAY,WAE7B,IAAMnB,EAAuC,GAAzB3B,EAAeS,QAAe,IAClDZ,EAAYY,QAAU,IAAIV,KAE1Bf,EAAY0C,EAAeC,IAC3BzC,EAAmBkD,GAAmBT,IAEtC1B,EAAmBQ,QAAU0C,aAAY,WACvCnE,EAAY0C,EAAeC,IAC3BzC,EAAmBkD,GAAmBT,IAEN5B,KAAK8B,MAAQhC,EAAYY,QAAQqB,WAElCH,GAC7BkB,OAED,KAEH/D,GAAW,KAEV,IAEGsE,GACJ/D,EAAKzF,OAAS,EAEV,kBAACyJ,GAAA,EAAD,CAAgB/I,UAAWgJ,MACzB,kBAACC,GAAA,EAAD,CAAOvM,UAAWrB,EAAQiI,MAAOhG,aAAW,gBAC1C,kBAAC4L,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,MAAM,WACjB,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,QACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,QACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,iBACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,yBACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,gBAGJ,kBAACC,GAAA,EAAD,KACGvE,EAAKtF,KAAI,SAAC6G,EAAKiD,GAAN,OACR,kBAACJ,GAAA,EAAD,CAAUzL,MAAO4I,EAAI5M,qBAAuB4M,EAAI3M,oBAAsB,CAAE+M,gBAAiB,UAAW8C,QAAS,IAAQ,CAAEzM,SAAU,UAAYvL,IAAK+X,GAChJ,kBAACH,GAAA,EAAD,CAAWC,MAAM,UAAUE,EAAQ,GACnC,kBAACH,GAAA,EAAD,CAAWC,MAAM,UAAU/C,EAAI/M,WAC/B,kBAAC6P,GAAA,EAAD,CAAWC,MAAM,UAAU/C,EAAI9M,WAC/B,kBAAC4P,GAAA,EAAD,CAAWC,MAAM,UAAU/C,EAAI5M,sBAC/B,kBAAC0P,GAAA,EAAD,CAAWC,MAAM,UAAU/C,EAAI3M,qBAC/B,kBAACyP,GAAA,EAAD,CAAWC,MAAM,UAAU/C,EAAI1M,mBAMvC,kBAACqD,EAAA,EAAD,CAAYC,QAAQ,KAAK8C,UAAU,KAAK3C,MAAM,gBAAgB0C,cAAY,GAA1E,sBAYF0J,GAAkB,WACtB,IAAMC,EAAUhC,KAAKC,OAAOlC,KAAK8B,MAAQhC,EAAYY,QAAQqB,WAAW,KAExE,MAAO,CACLmC,QAFcjC,KAAKC,MAAM+B,EAAU,IAGnCA,YAiCEE,GACJ,oCACE,kBAACC,GAAA,EAAD,CAAanN,UAAU,kBAAkBsD,UAAU,YACjD,kBAAC8J,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAQC,QAAS/E,EAAc9D,SApDR,SAACC,GACrCiD,GACFsB,EAAgBM,SAAU,EAC1BrB,GAAc,IAEdM,GAAgB,SAAA+E,GAAc,OAAKA,MA+CyD1Y,MAAM,UAC5F2P,MAAM,oBAGZ,8BAIEgJ,GACH7F,EAEC,kBAACtH,EAAA,EAAD,CAAYC,QAAQ,KAAK8C,UAAU,KAAKD,cAAY,GAAE6F,EAAYO,SAAZ,WAA2BP,EAAYO,QAAQ1M,MAA/C,KAAtD,KAAiHgL,GADrH,kBAACxH,EAAA,EAAD,CAAYC,QAAQ,KAAK8C,UAAU,KAAKD,cAAY,GAApD,SAA4D6F,EAAYO,SAAZ,WAA2BP,EAAYO,QAAQ1M,MAA/C,KAA5D,QAA0H4K,EAA1H,YAIMgG,GAAkBC,mBAAQ,kBAC9B,oCACE,yBAAK5M,MAAO,CACV6M,UAAW,OACXC,WAAYjG,EAAY,OAAS,MACjCkG,cAAelG,EAAY,OAAS,QAGjCA,EAWC,kBAAC1D,GAAA,EAAD,CACE3D,QAAQ,SACRzL,MAAO,IAAMkT,EACb+F,YAAa,EACbrN,MAAM,cAfG,kBAACkJ,EAAD,CACXlF,SAAU,SAACC,EAAO7P,GAChBiU,EAAeS,QAAUrL,OAAOrJ,GAChC6S,EAAeoB,EAAeS,UAEhCwE,kBAAkB,OAClBrN,aAAW,gBACXsN,IAAK,EACLC,KAAM,EACNC,IAAK,IACLC,aAAcrF,EAAeS,cAWpC,CAAC5B,EAAWQ,EAAMJ,IAEfqG,GAAqB,WACtB7F,GACDI,EAAYY,QAAU,IAAIV,KAE1BE,EAAmBQ,QAAU0C,aAAY,WACvCvD,EApFoB,WACxB,IAAM2F,EAAOxB,KACb,MAAM,kBAAN,OAAyBwB,EAAKtB,QAAU,EAAGsB,EAAKtB,QAAQ,gBAAiB,IAAzE,OAA8EsB,EAAKvB,QAAU,GAA7F,YAkFsBwB,MACjB,MAEHtC,KAEFpE,GAAW,IAGP2G,GACH5G,EAEE,kBAACnB,GAAA,EAAD,CAAQvG,QAAS,WAChBiI,GAAc,IACb5H,QAAQ,YAAYG,MAAM,WAAW8H,EAAc,OAAQ,QAH7D,kBAAC/B,GAAA,EAAD,CAAQvG,QAAS,WAAOmO,MAAuB9N,QAAQ,YAAYG,MAAM,WAAzE,SAMC+N,GACJ,oCAAG7G,EAAW,kBAACtH,EAAA,EAAD,CAAYP,UAAU,uBAAuBQ,QAAQ,KAAK8C,UAAU,KAAKD,cAAY,GAAEsF,GAA8B,MAarI,OACE,oCACE,kBAAC,GAAD,CAAQlK,eAAe,EAAMlI,UAAWoD,EAAclD,aAAa,UACjE,kBAACkY,GAAD,CAAYzI,KAAMiC,EAAgBhC,QAAS,WACzCgD,EAAgBM,SAAU,EAC1BrB,GAAc,IACbhC,OAhBM,WACT+C,EAAgBM,SAAWhB,EApGD,WAC9B,GAAKA,EAQA,CAEHwD,cAAchD,EAAmBQ,SACjC,IAAMmF,EAAe7B,KACfzB,EAAkF,KAA9B,GAAvBsD,EAAa3B,QAAgB2B,EAAa5B,SACvEjB,EAAaV,GAAcC,EAA0BA,GAC3DS,EAAW7O,YAAa,EAGxBmF,GAAK2J,kBAAkBD,GAAY1Q,MAAK,WACtCiN,GAAQ,SAACD,GAAD,6BAAmBA,GAAnB,iBAA6B0D,EAA7B,CAAyC7O,WAAY,qBAhB/DiM,EAAgBM,SAAU,EAC1Bf,GAAgB,GAEbb,GACDgE,KA8FFgD,GAEAhD,KAEFzD,GAAc,GACdN,GAAW,MAWNoF,GACAzE,EAAe,KAAOiF,GACtBjF,EAAe,KAAOkF,GACtBc,GAAchG,EAAciG,GAAoB,KAEjD,yBAAK1O,UAAU,cACb,kBAACO,EAAA,EAAD,CAAYC,QAAQ,KAAK8C,UAAU,KAAKD,cAAY,GAApD,mBACmBkF,EAAY,YAAQyC,KAAKG,KAAK5C,GAAlB,2BAA2D,MAGxFjD,EAAU,kBAACnB,GAAA,EAAD,CAAgBxD,MAAM,cAAiByL,QGrU9C0C,GApBO,WAKpB,OAJA3N,qBAAU,WACR4N,SAAShS,MAAQ,mCAChB,IAGD,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOzH,KAAMH,EAAYC,UAAUE,KAAM0Z,OAAK,EAAC1L,UAAW2L,GAAQzH,YAClE,kBAAC,IAAD,CAAOlS,KAAMH,EAAYS,MAAMN,KAAM0Z,OAAK,EAAC1L,UAAW2L,GAAQnI,QAC9D,kBAAC,IAAD,CAAOxR,KAAMH,EAAYO,SAASJ,KAAM0Z,OAAK,EAAC1L,UAAW2L,GAAQxH,WACjE,kBAAC,IAAD,CAAOnS,KAAMH,EAAYU,MAAMP,KAAM0Z,OAAK,EAAC1L,UAAW2L,GAAQvH,QAC9D,kBAAC,IAAD,CAAOpS,KAAMH,EAAYY,MAAMT,KAAM0Z,OAAK,EAAC1L,UAAW2L,GAAQjZ,QAC9D,kBAAC,IAAD,CAAOV,KAAK,QAAQ0Z,OAAK,EAAC1L,UAAW2L,GAAQjZ,QAC7C,kBAAC,IAAD,CAAUkZ,GAAI/Z,EAAYC,UAAUE,UCRxBuD,QACW,cAA7BhC,OAAOC,SAASqY,UAEe,UAA7BtY,OAAOC,SAASqY,UAEhBtY,OAAOC,SAASqY,SAAS5M,MACvB,2DCZN6M,IAASC,OAAO,kBAAC,GAAD,MAASN,SAASO,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpU,MAAK,SAAAqU,GACjCA,EAAaC,iB","file":"static/js/main.80ba5b3d.chunk.js","sourcesContent":["class UtilsService{\n    static _instance: UtilsService;\n\n   replaceParamsInUrl(url: string, params: {[key: string]: any}){\n        Object.entries(params).forEach(([key, value]) => {\n            url = url.replace(`:${key}`, value);\n        });\n\n        return url;\n    }\n    \n    static getInstance(){\n        if(!UtilsService._instance){\n            UtilsService._instance = new UtilsService();\n        }\n\n        return UtilsService._instance;\n    }\n}\n\nexport default UtilsService.getInstance();","import utilsService from './utils.service';\nimport {Book, MenuBook, Note, Timer} from '@material-ui/icons';\nimport {serverBase} from './config';\n\nexport const routeConfig: { [key: string]: any }  = {\n    notebooks: {\n        name: 'Notebooks',\n        path: '/notebooks',\n        isHomePage: true,\n        icon: Book\n    },\n    sections: {\n        name: 'Sections',\n        path: '/notebooks/:id',\n        icon: MenuBook\n    },\n    login: {\n        name: 'Login',\n        path: '/login'\n    },\n    pages: {\n        name: 'Pages',\n        path: '/sections/:id/pages',\n        icon: Note\n    },\n    timer: {\n        name: 'Timer',\n        path: '/timer',\n        icon: Timer\n    }\n};\n\nexport const breadCrumbs: {[key: string]: any} = {\n    [routeConfig.sections.name]: [routeConfig.notebooks],\n    [routeConfig.pages.name]: [routeConfig.notebooks, routeConfig.sections]\n};\n\nclass RouteService{\n    static _instance: RouteService;\n\n    getBreadCrumbs(routeName: string){\n        return breadCrumbs[routeName];\n    }\n\n    getHomeRoute(){\n        let homeRoute = Object.entries(routeConfig).find((route: any) => route[1].isHomePage);\n        return homeRoute? homeRoute[1] : null;\n    }\n\n    getRouteInfo(name: string){\n        return routeConfig[name];\n    }\n\n    getRouteUrl(name: string, params: {} = {}){\n        const routeInfo = this.getRouteInfo(name);\n        // return `${serverBase}#${utilsService.replaceParamsInUrl(routeInfo.path, params)}`;\n        return `${serverBase}/#${utilsService.replaceParamsInUrl(routeInfo.path, params)}`;\n    }\n\n    gotoUrl(url: string){\n        window.location.href = url;\n    }\n\n    goTo(name: string, params: {} = {}){\n        const url = this.getRouteUrl(name, params);\n        this.gotoUrl(url);\n    }\n\n    static getInstance(){\n        if(!RouteService._instance){\n            RouteService._instance = new RouteService();\n        }\n\n        return RouteService._instance;\n    }\n}\n\nexport default RouteService.getInstance();\n","import * as Msal from 'msal';\nimport {routeConfig as r} from './route.service';\n\nexport const serverBase = 'http://localhost:3000';\n// export const serverBase = 'https://ajayullal.github.io/one-note-spaced-repetition';\n\nexport const msalConfig: Msal.Configuration = {\n    auth: {\n        clientId: \"7909dc21-ee19-4123-8ff2-9f21085c8447\",\n        authority: \"https://login.microsoftonline.com/common\",\n        // redirectUri: `${serverBase}/auth`\n        redirectUri: `${serverBase}/notebooks`\n    },\n    cache: {\n        cacheLocation: \"sessionStorage\",\n        storeAuthStateInCookie: true\n    }\n};\n\nexport const themeConfig = {\n    drawerWidth: 240\n};\n\nexport const apiConfig = {\n    // serverBase: 'http://localhost:4006'\n    serverBase: 'https://www.onenote.com/api/v1.0/me/notes'\n};\n\nexport const appTexts = {\n    appName: 'Spaced Repetition'\n};\n\nexport const routeConfig = r;\n\nexport default {\n    themeConfig,\n    appTexts,\n    apiConfig,\n    msalConfig,\n    routeConfig\n}\n","import localforage from \"localforage\";\n\nclass ClientSideDataStorage {\n    private storage = localforage.createInstance({\n        name: \"nameHere\"\n    });\n\n    setItemSync(key:string, value: string){\n        if(value){\n            localStorage.setItem(key, value);\n        }else{\n            this.removeItemSync(key);\n        }\n    }\n\n    getItemSync(key:string){\n        return localStorage.getItem(key)\n    }\n\n    removeItemSync(key:string){\n        return localStorage.removeItem(key);\n    }\n\n    setItem(key:any, value: any){\n        this.storage.setItem(key, value);\n    }\n\n    getItem(key: any){\n        return this.storage.getItem(key);\n    }\n\n    removeItem(key: any){\n        return this.storage.removeItem(key);\n    }\n\n    static _instance: ClientSideDataStorage;\n\n    static getInstance() {\n        if (!ClientSideDataStorage._instance) {\n            ClientSideDataStorage._instance = new ClientSideDataStorage();\n        }\n\n        return ClientSideDataStorage._instance;\n    }\n}\n\nexport default ClientSideDataStorage.getInstance();","import clientStorage from './client-side-data-storage.service';\n\nclass UserService {\n    static _userService: UserService;\n    _userDetails: any;\n\n    constructor(){\n        const userDetails = clientStorage.getItemSync('userDetails');\n\n        if(userDetails){\n            this._userDetails = JSON.parse(userDetails);\n        }\n    }\n\n    set userDetails(details: any) {\n        this._userDetails = details;\n    }\n\n    get userDetails() {\n        return this._userDetails;\n    }\n\n    isLoggedIn(): Boolean {\n        return Boolean(clientStorage.getItemSync('token'));\n    }\n\n    logout(){\n        return Boolean(clientStorage.removeItemSync('token'));\n    }\n\n    static getInstance() {\n        if (!UserService._userService) {\n            UserService._userService = new UserService();\n        }\n\n        return UserService._userService;\n    }\n}\n\nexport default UserService.getInstance();","import {userService, routerService} from './';\n\nconst errorMessage = {\n    401: \"Request failed with status code 401\"\n};\n\nclass ErrorHandlerService {\n    static _instance: ErrorHandlerService;\n\n    constructor() {\n\n    }\n\n    logout() {\n        userService.logout();\n        window.location.replace(routerService.getRouteUrl('login')) \n    }\n\n    handleError = (error: any) => {\n        switch (error.message) {\n            case errorMessage['401']: this.logout()\n        }\n\n        return Promise.reject(error.message || error.response.data.message)\n    }\n\n    static getInstance() {\n        if (!ErrorHandlerService._instance) {\n            ErrorHandlerService._instance = new ErrorHandlerService();\n        }\n        return ErrorHandlerService._instance;\n    }\n}\n\nexport default ErrorHandlerService.getInstance();","import { default as _axios } from 'axios';\nimport { msalConfig } from './config';\nimport * as Msal from 'msal';\nimport userService from './user.service';\nimport utilsService from './utils.service';\nimport clientStorage from \"./client-side-data-storage.service\";\nimport errorHandlerService from \"./error-handler.service\";\nimport routerService from './route.service';\n\nconst axios = _axios.create({\n    baseURL: 'https://graph.microsoft.com/v1.0/me/onenote',\n    headers: {\n\n    }\n});\n\naxios.interceptors.response.use(response => response.data, error => Promise.reject(error));\n\nconst apiEndPoints = {\n    notebooks: '/notebooks',\n    sections: '/notebooks/:id/sections',\n    pages: '/sections/:id/pages?top=100',\n    content: '/pages/0-f2f6afa638c1864cb26399b2a7cef5f7!1-E6AC34B29128DCBF!2176/content'\n};\n\nclass MicrosoftOneNoteApi {\n    private _redirectUrl: string | null = null;\n    private _db: any;\n    private _dbCellDelimiter = '!@#';\n\n    public get redirectUrl(): string | null {\n        return this._redirectUrl;\n    }\n\n    public set redirectUrl(value: string | null) {\n        this._redirectUrl = value;\n    }\n\n    myMSALObj: any;\n    static microsoftOneNoteApi: any;\n\n    //, \"Notes.ReadWrite.All\", \"Notes.ReadWrite\", \"Notes.Read\", \"Notes.Create\"\n    requestObj = {\n        scopes: [\"Notes.Read.All\"]\n    };\n\n    constructor() {\n        this.myMSALObj = new Msal.UserAgentApplication(msalConfig);\n        this.checkAndSetPersistedBearerToken();\n    }\n\n    authRedirectCallBack(error: any, response: any) {\n        if (error) {\n            console.log(error);\n        }\n        else {\n            if (response.tokenType === \"access_token\") {\n                console.log(response.accessToken);\n            } else {\n                console.log(\"token type is:\" + response.tokenType);\n            }\n        }\n    }\n\n    onToken(tokenResponse: any){\n        this.setBearerToken(tokenResponse.accessToken);\n        this.setUserDetails(userService.userDetails);\n        window.location.href = routerService.getRouteUrl('notebooks');\n    }\n\n    acquireTokenPopup() {\n        //Always start with acquireTokenSilent to obtain a token in the signed in user from cache\n        this.myMSALObj.acquireTokenSilent(this.requestObj).then((tokenResponse: any) => {\n            this.onToken(tokenResponse)\n        }).catch((error: any) => {\n            alert(error);\n            this.myMSALObj.acquireTokenPopup(this.requestObj).then((tokenResponse: any) => {\n                this.onToken(tokenResponse)\n            }).catch((error: any) => {\n                alert(error);\n            });\n        });\n    }\n\n    setUserDetails(userDetails: any) {\n        clientStorage.setItemSync('userDetails', JSON.stringify(userDetails));\n    }\n\n    onSignIn() {\n        this.myMSALObj.handleRedirectCallback(this.authRedirectCallBack);\n        \n        return this.myMSALObj.loginPopup(this.requestObj).then((loginResponse: any) => {\n            this.acquireTokenPopup();\n        }).catch((error: any) => {\n            alert(error);\n        });\n    }\n\n    checkAndSetPersistedBearerToken() {\n        const token = clientStorage.getItemSync('token');\n\n        if (token) {\n            axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        }\n    }\n\n    setBearerToken(token: string) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        clientStorage.setItemSync('token', token);\n    }\n\n    private returnValue(resp: any) {\n        return resp.value\n    }\n\n    getAllNoteBooks() {\n        return axios.get(apiEndPoints.notebooks).then(this.returnValue).catch(errorHandlerService.handleError);\n    }\n\n    getAllSection(notebookId: string) {\n        return axios.get(utilsService.replaceParamsInUrl(apiEndPoints.sections, { id: notebookId })).then(this.returnValue).catch(errorHandlerService.handleError);\n    }\n\n    getAllPages(sectionId: string) {\n        return axios.get(utilsService.replaceParamsInUrl(apiEndPoints.pages, { id: sectionId })).then(this.returnValue).catch(errorHandlerService.handleError);\n    }\n\n    getPage(selfUrl: string) {\n        return axios.get(selfUrl).catch(errorHandlerService.handleError);\n    }\n\n    updateOneNotePage(sessionDetails: any) {\n        return axios.patch(apiEndPoints.content,\n            [\n                {\n                    'target':'body',\n                    'action':'append',\n                    'content': `<p>${sessionDetails.startDate}${this._dbCellDelimiter} ${sessionDetails.startTime}${this._dbCellDelimiter} ${sessionDetails.title}${this._dbCellDelimiter} ${sessionDetails.minutesSpentLearning}${this._dbCellDelimiter} ${sessionDetails.totalSessionMinutes}${this._dbCellDelimiter} ${sessionDetails.repetition}</p>`\n                  }\n             ]\n        ).then(data => this._db = null).catch(errorHandlerService.handleError);\n    }\n\n    getAllDBRows(){\n        return new Promise((resolve, reject) => {\n            this.getDb().then((db: string) => {\n                var doc = new DOMParser().parseFromString(db, \"text/xml\");\n                const ps = Array.from(doc.getElementsByTagName('p'));\n                const _rows: any[] = [];\n                ps.forEach(p => {\n                  const content = p?.textContent?.split(this._dbCellDelimiter) || [];\n                  _rows.push({\n                    startDate: content ? content[0] : '',\n                    startTime: content ? content[1] : '',\n                    title: content ? content[2].trim() : '',\n                    minutesSpentLearning: content ? Number(content[3]) : '',\n                    totalSessionMinutes: content ? content[4] : '',\n                    repetition: content ? (content[5].trim() === 'false'? 'No': 'Yes') : '',\n                  });\n                });\n                resolve(_rows);\n              }).catch(reject);\n        });\n    }\n\n    getDb(){\n        if(this._db){\n            return Promise.resolve(this._db);\n        }else{\n            return axios.get(apiEndPoints.content).then(db => {\n                return this._db = db;\n             });\n        }\n    }\n\n    getPageContent(contentUrl: string) {\n        return axios.get(contentUrl).catch(errorHandlerService.handleError);\n    }\n\n    static getInstance() {\n        if (!MicrosoftOneNoteApi.microsoftOneNoteApi) {\n            MicrosoftOneNoteApi.microsoftOneNoteApi = new MicrosoftOneNoteApi();\n        }\n\n        return MicrosoftOneNoteApi.microsoftOneNoteApi;\n    }\n}\n\nexport default MicrosoftOneNoteApi.getInstance();","import _clientStorage from './client-side-data-storage.service';\nimport _mons from './microsoft-one-note.service';\nimport _routerService from './route.service';\nimport _userService from './user.service';\nimport _errorHandlerService from './error-handler.service';\n\nexport const clientStorage = _clientStorage;\nexport const mons = _mons;\nexport const routerService = _routerService;\nexport const userService = _userService;\nexport const errorHandlerService = _errorHandlerService;","import React, { useContext } from 'react';\nimport './header.scss';\nimport { AppBar, Toolbar, IconButton, Typography, makeStyles, createStyles, Theme, Link } from '@material-ui/core';\nimport { AccountCircle, Home } from '@material-ui/icons';\nimport IHeader from \"./IHeader\";\nimport { themeConfig } from '../../services/config';\nimport NavDrawer from '../nav-drawer';\nimport { userService, routerService } from '../../services';\n\nconst useStyles = (hideNavDrawer: IHeader['hideNavDrawer']) => {\n    return makeStyles((theme: Theme) =>\n        createStyles({\n            appBar: {\n                [theme.breakpoints.up('sm')]: {\n                    width: hideNavDrawer ? '100%' : `calc(100% - ${themeConfig.drawerWidth}px)`,\n                    marginLeft: themeConfig.drawerWidth\n                },\n            },\n            menuButton: {\n                marginRight: theme.spacing(2),\n                [theme.breakpoints.up('sm')]: {\n                    display: 'none'\n                }\n            },\n            homeButton: {\n                marginLeft: '10px',\n                marginRight: '5px'\n            },\n            toolbar: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                padding: '0px',\n                paddingRight: '15px'\n            }\n        })\n    );\n}\n\nexport default ({ pageName, hideNavDrawer = false, history }: IHeader) => {\n    const classes = useStyles(hideNavDrawer)();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    const gotoHome = () => {\n        let homeRoute = routerService.getHomeRoute();\n        history.push(homeRoute.path);\n    };\n\n    const logout = () => {\n        userService.logout();\n        history.push(routerService.getRouteUrl('login'));\n    };\n\n    const userDetails = (<div className=\"account-details\">\n        <span className=\"user-name\">{userService.userDetails?.account.name}</span>\n        <AccountCircle />\n        <span onClick={logout} className=\"logout\">Logout</span>\n    </div>);\n\n    return (\n        <>\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar className={classes.toolbar}>\n                    {/* <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                    >\n                        <Home />\n                    </IconButton> */}\n                    <Typography variant=\"h6\" noWrap>\n                        <>\n                            <IconButton\n                                color=\"inherit\"\n                                aria-label=\"open drawer\"\n                                edge=\"start\"\n                                className={classes.homeButton}\n                                onClick={gotoHome}>\n                                <Home />\n                            </IconButton>\n                            <span style={{ position: 'relative', top: '2px' }}>{pageName}</span>\n                        </>\n                    </Typography>\n\n                    {userService.isLoggedIn() ? userDetails : null}\n                </Toolbar>\n            </AppBar>\n\n            {/* {!hideNavDrawer ? <NavDrawer open={mobileOpen} onClose={handleDrawerToggle} /> : null} */}\n        </>\n    );\n};\n","import React, {useEffect} from 'react';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nexport default ({errorMessage}: any) => {\n    useEffect(() => {}, [errorMessage]);\n\n    function Alert(props: any) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n\n    const handleClose = (event: any, reason: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        errorMessage = ''\n    };\n\nreturn (\n        <>     \n            {errorMessage? (\n                <div style={{\n                    marginTop: '70px',\n                    width: '110%',\n                    marginLeft: '50px'\n                }}>\n                    <Alert severity=\"error\">\n                        {errorMessage}\n                    </Alert>\n                </div>\n            ): null}\n        </>);\n};","import React, { useEffect, useRef } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles, Theme, createStyles, Typography, Link } from '@material-ui/core';\nimport Header from '../header/Header';\nimport ILayout from './ILayout';\nimport routeService from '../.../../../services/route.service';\nimport {withRouter} from 'react-router-dom';\nimport ErrorAlert from '../error-alert/ErrorAlert';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex'\n    },\n    toolbar: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    link: {\n      display: 'flex',\n    },\n    icon: {\n      marginRight: theme.spacing(0.5),\n      width: 20,\n      height: 20,\n    },\n    breadcrumb: {\n      marginBottom: 20\n    }\n  })\n);\n\nexport default withRouter(function Layout({ errorMessage, routeInfo, children, hideNavDrawer = false, history }: any) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      \n      <ErrorAlert errorMessage={errorMessage} />\n\n      <Header history={history} hideNavDrawer={hideNavDrawer} pageName={routeInfo.name} />\n\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {children}\n      </main>\n    </div>\n  );\n});\n","import useAuth from \"../hooks/useAuth\";\nimport React from \"react\";\nimport mons from '../services/microsoft-one-note.service';\n\nexport default (Component: any) => (props: any) => {\n    const [isAuthenticated] = useAuth(props.history);\n    \n    if(!isAuthenticated){\n        mons.redirectUrl = props.match.url;\n        return null;\n    }else{\n        mons.redirectUrl = null;\n        return <Component {...props} />\n    }\n}","import authService from '../services/user.service';\nimport {routeConfig} from '../services/route.service';\nimport clientStorageService from '../services/client-side-data-storage.service';\nimport userService from '../services/user.service';\n\nexport default (history: any) => {\n    if(!userService.isLoggedIn()){\n        history.push(routeConfig.login.path);\n        return [false];\n    }\n\n    return [true];\n};","import React from 'react';\nimport { Grid, Card, CardContent, Typography, makeStyles } from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n    card: {\n        cursor: 'pointer'\n    }\n});\n\n\nexport default ({items, onClick, displayPropName, id}: any) => {\n    const classes = useStyles();\n\n    return (\n        items.length > 0?\n        (<Grid spacing={5} container>\n            {\n                items.map((item: any) => {\n                    return (\n                        <Grid onClick={() => onClick(item)} xs={12} item md={6} key={item.id}>\n                            <Card className={classes.card} variant=\"outlined\">\n                                <CardContent>\n                                    <Typography color=\"textSecondary\" gutterBottom>\n                                        {item[displayPropName]}\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    );\n                })\n            }\n        </Grid>):\n        <Typography variant=\"h6\" component=\"h6\" color=\"textSecondary\" gutterBottom>Nothing to display</Typography>\n    );\n}","import React from 'react';\nimport Layout from '../../components/layout/layout';\nimport { LinearProgress } from '@material-ui/core';\nimport useBooks from './useBooks';\nimport withAuth from '../../HOCs/withAuth';\nimport routerService from '../../services/route.service';\nimport CardList from '../../components/card-list/CardList';\n\nexport default withAuth((props: any) => {\n    const [noteBooks, errorMessage] = useBooks();\n\n    const viewSections = (noteBook: any) => {\n        routerService.goTo('sections', { id: noteBook.id });\n    };\n\n    const noteBooksGrid = (<CardList displayPropName='displayName' onClick={viewSections} items={noteBooks || []}></CardList>);\n\n    return (\n        <Layout \n            errorMessage={errorMessage} \n            hideNavDrawer={true} \n            routeInfo={routerService.getRouteInfo('notebooks')}>\n            {\n                !noteBooks ? (<LinearProgress color=\"secondary\" />) : noteBooksGrid\n            }\n        </Layout>\n    );\n});","import {useEffect, useState} from 'react';\nimport microsoftOneNoteService from '../../services/microsoft-one-note.service';\n\nexport default () => {\n    let [noteBooks, setNoteBooks] = useState(null);\n    let [errorMessage, setErrorMessage] = useState(null);\n\n    useEffect(() => {\n        microsoftOneNoteService.getAllNoteBooks().then((allBooks: any) => {\n            setNoteBooks(allBooks);\n        }).catch((error: any) => {\n            setErrorMessage(error);\n        });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return [noteBooks, errorMessage];\n};\n","import React, {useEffect, useState} from 'react';\nimport Layout from '../../components/layout/layout';\nimport { LinearProgress, Grid, TextField } from '@material-ui/core';\nimport withAuth from '../../HOCs/withAuth';\nimport useSections from './useSections';\nimport CardList from '../../components/card-list/CardList';\nimport routerService from '../../services/route.service';\n\nexport default withAuth((props: any) => {\n    const [sections] = useSections(props.match.params.id);\n    const [filteredSections, setFilteredSections] = useState([]);\n\n    useEffect(() => {\n        setFilteredSections(sections);\n    }, [sections]);\n\n    function viewPages(section: any){\n        routerService.goTo('pages', {id: section.id});\n    }\n\n    const sectionsGrid = (\n        <>\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <TextField\n                        className='searchBox'\n                        id=\"outlined-secondary\"\n                        label=\"Search Sections\"\n                        variant=\"outlined\"\n                        onChange={(event: any) => {\n                            const searchTxt = event.target.value.toLowerCase();\n                            \n                            const _filteredSections = sections.filter((section: any) => {\n                                const sectionName = section.displayName.toLowerCase();\n                                return sectionName.startsWith(searchTxt);\n                            });\n\n                            setFilteredSections(_filteredSections);\n                        }}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <CardList displayPropName='displayName' onClick={viewPages} items={filteredSections || []}></CardList>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    return (\n        <Layout hideNavDrawer={true} routeInfo={routerService.getRouteInfo('sections')}>\n            <>\n                {\n                    sections?.length > 0 ? sectionsGrid:  (<LinearProgress color=\"secondary\" />)\n                }\n            </>\n        </Layout>\n    );\n});","import mons from '../../services/microsoft-one-note.service';\nimport {useState, useEffect} from 'react';\n\nexport default (notebookId: string)=> {\n    let [sections, useSections] = useState([]);\n\n    useEffect(() => {\n        mons.getAllSection(notebookId).then((sections: any) => {\n            useSections(sections);\n        });\n    }, [notebookId]);\n\n    return [sections];\n};","import withAuth from \"../../HOCs/withAuth\";\nimport usePages from \"./usePages\";\nimport React, { useEffect, useState } from \"react\";\nimport CardList from \"../../components/card-list/CardList\";\nimport Layout from \"../../components/layout/layout\";\nimport { LinearProgress, TextField, Grid } from \"@material-ui/core\";\nimport routerService from '../../services/route.service';\nimport './_pages.scss';\n\nexport default withAuth((props: any) => {\n    const [pages, loading]: any[] = usePages(props.match.params.id);\n    const [filteredPages, setFilteredPages] = useState(pages);\n    const timerUrl = routerService.getRouteUrl('timer');\n\n    useEffect(() => {\n        setFilteredPages(pages);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [pages]);\n\n    function viewPageInfo(page: any) {\n        routerService.gotoUrl(`${timerUrl}?pageUrl=${encodeURIComponent(page.self)}`);\n    }\n\n    const sectionsGrid = (\n        <>\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <TextField\n                        className='searchBox'\n                        id=\"outlined-secondary\"\n                        label=\"Search Pages\"\n                        variant=\"outlined\"\n                        onChange={(event: any) => {\n                            const searchTxt = event.target.value.toLowerCase();\n                            \n                            const _filteredPages = pages.filter((page: any) => {\n                                const pageTitle = page.title.toLowerCase();\n                                return pageTitle.startsWith(searchTxt);\n                            });\n\n                            setFilteredPages(_filteredPages);\n                        }}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <CardList displayPropName='title' onClick={viewPageInfo} items={filteredPages}></CardList>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    return (\n        <Layout hideNavDrawer={true} routeInfo={routerService.getRouteInfo('pages')}>\n            <>\n                {\n                    loading ? (<LinearProgress color=\"secondary\" />) : sectionsGrid\n                }\n            </>\n        </Layout>\n    );\n});","import {useState, useEffect} from 'react';\nimport mons from '../../services/microsoft-one-note.service';\n\nexport default (sectionId: string) => {\n    let [pages, setPages] = useState([]);\n    let [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        mons.getAllPages(sectionId).then((pages: any) => {\n            setPages(pages);\n        }).finally(() => {\n            setLoading(false);\n        });\n    }, [sectionId]);\n\n    return [pages, loading];\n};","import React from \"react\";\nimport { Dialog, DialogTitle, DialogActions, Button } from \"@material-ui/core\";\n\nexport default ({open, onClose, onQuit}: any) => {\n    return (\n        <div>\n            <Dialog\n                open={open}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\">\n                <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to quit?\"}</DialogTitle>\n\n                <DialogActions>\n                    <Button onClick={onClose} color=\"primary\">Close</Button>\n                    <Button onClick={onQuit} color=\"primary\" autoFocus>Quit</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};","import React, { useState, useMemo, useCallback, useRef, useEffect } from 'react';\nimport Layout from '../../components/layout/layout';\nimport routerService from '../../services/route.service';\nimport { withStyles, Slider, Typography, Button, LinearProgress, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, makeStyles } from '@material-ui/core';\nimport mons from '../../services/microsoft-one-note.service';\nimport QuitDialog from './QuitDialog';\nimport Paper from '@material-ui/core/Paper';\nimport './_timer.scss';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  },\n});\n\nexport default (props: any) => {\n  let [sliderValue, setSliderValue] = useState(30);\n  let [isTicking, setTicking] = useState(false);\n  let [timeLeft, setTimeLeft] = useState();\n  let [timeLeftPercent, setTimeLeftPercent] = useState(0);\n  let [openQuitDialog, setQuitDialog] = useState(false);\n  let [rows, setRows]: [any[], any] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [totalMinutes, setTotalMinutes] = useState();\n  const [revisionMode, setRevisionMode] = useState(false);\n  const [timeElapsedTxt, setTimeElapsedTxt] = useState(''); \n\n  const startMillis = useRef(new Date());\n  const sliderValueRef = useRef(30);\n  const counterIntervalRef: any = useRef();\n  const pageDetails = useRef({ title: '' });\n  const revisionClicked = useRef(false);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    const params = new URLSearchParams(props.location.search);\n    const pageUrl = params.get('pageUrl');\n\n    if (pageUrl) {\n      mons.getPage(pageUrl).then((_pageDetails: any) => {\n        pageDetails.current = _pageDetails;\n\n        return mons.getAllDBRows().then((rows: any[]) => {\n          let _totalMinutes = 0;\n          const _rows: any = [];\n\n          rows.forEach(row => {\n            if (pageDetails?.current.title === row.title) {\n              _totalMinutes += row.minutesSpentLearning;\n              _rows.push(row);\n            }\n          });\n\n          setTotalMinutes(_totalMinutes);\n          setRows(_rows);\n        });\n      }).finally(() => {\n        setLoading(false);\n      });\n    } else {\n      routerService.goTo(routerService.getHomeRoute()['name'].toLowerCase());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const PrettoSlider = withStyles({\n    root: {\n      color: 'rgb(246, 1, 87)',\n      height: 8,\n    },\n    thumb: {\n      height: 24,\n      width: 24,\n      backgroundColor: '#fff',\n      border: '2px solid currentColor',\n      marginTop: -8,\n      marginLeft: -12,\n      '&:focus,&:hover,&$active': {\n        boxShadow: 'inherit',\n      },\n    },\n    active: {},\n    valueLabel: {\n      left: 'calc(-50% + 4px)',\n    },\n    track: {\n      height: 8,\n      borderRadius: 4,\n    },\n    rail: {\n      height: 8,\n      borderRadius: 4,\n    },\n  })(Slider);\n\n  const getTimeLeftTxt = (totalMillis: number) => {\n    const millisElapsedSinceStart = Date.now() - startMillis.current.getTime();;\n    const millisLeft = totalMillis - millisElapsedSinceStart;\n    let totalSecondsLeft = millisLeft / (1000);\n    let minutesLeft = Math.trunc(totalSecondsLeft / 60);\n    let secondsLeft = Math.ceil(totalSecondsLeft - (minutesLeft * 60));\n    return `${minutesLeft} minutes and ${secondsLeft} seconds left`;\n  };\n\n  const getPercentTimeLeft = (totalMillis: number) => {\n    const millisElapsedSinceStart = Date.now() - startMillis.current.getTime();\n    const millisLeft = totalMillis - millisElapsedSinceStart;\n    return (millisLeft / totalMillis) * 100;\n  };\n\n  const getRowDetails = (totalMillisSpeantLeaning: number, totalMillis: number) => {\n    const startDate = `${startMillis.current.getDate()}-${startMillis.current.getMonth() + 1}-${startMillis.current.getFullYear()}`;\n    const startTime = `${startMillis.current.getHours()}:${startMillis.current.getMinutes()}:${startMillis.current.getSeconds()}`;\n\n    return {\n      startDate,\n      startTime,\n      title: pageDetails.current.title,\n      totalSessionMinutes: totalMillis / (60000),\n      minutesSpentLearning: totalMillisSpeantLeaning / (60000),\n      repetition: false\n    };\n  };\n\n  const stopTimer = useCallback(() => {\n    const totalMillis = sliderValueRef.current * 60 * 1000;\n    const totalMillisSpeantLeaning = (Date.now() - startMillis.current.getTime());\n    const rowDetails = getRowDetails(totalMillisSpeantLeaning, totalMillis);\n\n    // Update one note page which tracks learning\n    mons.updateOneNotePage(rowDetails).then(() => {\n      setRows((rows: any) => [...rows, {...rowDetails, repetition: 'No'}]);\n    });\n\n    clearInterval(counterIntervalRef.current);\n    setTicking(false);\n    // Store time spent studying \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const startTimer = useCallback(() => {\n    // Start timer \n    const totalMillis = sliderValueRef.current * 60 * 1000;\n    startMillis.current = new Date();\n\n    setTimeLeft(getTimeLeftTxt(totalMillis));\n    setTimeLeftPercent(getPercentTimeLeft(totalMillis));\n\n    counterIntervalRef.current = setInterval(() => {\n      setTimeLeft(getTimeLeftTxt(totalMillis));\n      setTimeLeftPercent(getPercentTimeLeft(totalMillis));\n\n      const millisElapsedSinceStart = Date.now() - startMillis.current.getTime();\n\n      if (millisElapsedSinceStart >= totalMillis) {\n        stopTimer();\n      }\n    }, 1000);\n\n    setTicking(true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const studyHistory = (\n    rows.length > 0 ?\n      (\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\"></TableCell>\n                <TableCell align=\"center\">Date</TableCell>\n                <TableCell align=\"center\">Time</TableCell>\n                <TableCell align=\"center\">Minutes spent</TableCell>\n                <TableCell align=\"center\">Total session minutes</TableCell>\n                <TableCell align=\"center\">Repetition</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map((row, index) => (\n                <TableRow style={row.minutesSpentLearning < row.totalSessionMinutes ? { backgroundColor: '#faa1be', opacity: 0.8 } : { position: 'static' }} key={index}>\n                  <TableCell align=\"center\">{index + 1}</TableCell>\n                  <TableCell align=\"center\">{row.startDate}</TableCell>\n                  <TableCell align=\"center\">{row.startTime}</TableCell>\n                  <TableCell align=\"center\">{row.minutesSpentLearning}</TableCell>\n                  <TableCell align=\"center\">{row.totalSessionMinutes}</TableCell>\n                  <TableCell align=\"center\">{row.repetition}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      ) : <Typography variant=\"h6\" component=\"h6\" color=\"textSecondary\" gutterBottom>Nothing to display</Typography>\n  );\n\n  const toggleRevisionMode = (name: any) => (event: any) => {\n    if (isTicking) {\n      revisionClicked.current = true;\n      setQuitDialog(true)\n    } else {\n      setRevisionMode(isRevisionMode => !isRevisionMode);\n    }\n  };\n\n  const getRevisionTime = () => {\n    const seconds = Math.trunc((Date.now() - startMillis.current.getTime())/1000);\n    const minutes = Math.trunc(seconds / 60);\n    return {\n      minutes,\n      seconds\n    };\n  };\n\n  const getTimeElapsedTxt = () => {\n    const time = getRevisionTime();\n    return `Time Elapsed - ${time.minutes > 0? time.minutes+\" minutes and \": ''}${time.seconds % 60} seconds`;\n  };\n\n  const checkAndSetRevisionMode = () => {\n    if (!revisionMode) {\n      // Revision started\n      revisionClicked.current = false;\n      setRevisionMode(true);\n\n      if(isTicking){\n        stopTimer();\n      }\n    }else{\n      // Revision Ended\n      clearInterval(counterIntervalRef.current);\n      const revisionTime = getRevisionTime();\n      const totalMillisSpeantLeaning = ((revisionTime.minutes * 60) + revisionTime.seconds) * 1000;\n      const rowDetails = getRowDetails(totalMillisSpeantLeaning, totalMillisSpeantLeaning);\n      rowDetails.repetition = true;\n        \n      // Update one note page which tracks learning\n      mons.updateOneNotePage(rowDetails).then(() => {\n        setRows((rows: any) => [...rows, {...rowDetails, repetition: 'Yes'}]);\n      });\n    }\n  };\n\n  const revisionSwitch = (\n    <>\n      <FormControl className=\"revision-switch\" component=\"fieldset\">\n        <FormGroup>\n          <FormControlLabel\n            control={<Switch checked={revisionMode} onChange={toggleRevisionMode('revisionMode')} value=\"gilad\" />}\n            label=\"Revision Mode\" />\n        </FormGroup>\n      </FormControl>\n      <br />\n    </>\n  );\n\n  const studyModeHeader = (\n    !isTicking ?\n  <Typography variant=\"h5\" component=\"h6\" gutterBottom>Study {pageDetails.current && `\"${pageDetails.current.title}\"`} for {sliderValue} Minutes</Typography> :\n      <Typography variant=\"h5\" component=\"h6\" gutterBottom>{pageDetails.current && `\"${pageDetails.current.title}\"`}: {timeLeft}</Typography>\n  );\n\n  const studyModeSlider = useMemo(() => (\n    <>\n      <div style={{\n        minHeight: '45px',\n        paddingTop: isTicking ? '15px' : '0px',\n        paddingBottom: isTicking ? '15px' : '0px'\n      }}>\n        {\n          !isTicking ? <PrettoSlider\n            onChange={(event, value) => {\n              sliderValueRef.current = Number(value);\n              setSliderValue(sliderValueRef.current);\n            }}\n            valueLabelDisplay=\"auto\"\n            aria-label=\"pretto slider\"\n            min={1}\n            step={5}\n            max={120}\n            defaultValue={sliderValueRef.current} /> :\n            <LinearProgress\n              variant=\"buffer\"\n              value={100 - timeLeftPercent}\n              valueBuffer={0}\n              color=\"secondary\"\n            />\n        }\n      </div>\n    </>\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  ), [isTicking, rows, timeLeftPercent]);\n\n  const checkAndStartTimer = () => {\n    if(revisionMode){\n      startMillis.current = new Date();\n  \n      counterIntervalRef.current = setInterval(() => {\n        setTimeElapsedTxt(getTimeElapsedTxt());\n      }, 1000);\n    }else{\n      startTimer();\n    }\n    setTicking(true);\n  };\n\n  const timerButtons = (\n    !isTicking ?\n      (<Button onClick={() => {checkAndStartTimer()}} variant=\"contained\" color=\"primary\">Start</Button>) :\n      (<Button onClick={() => {\n        setQuitDialog(true)\n      }} variant=\"contained\" color=\"primary\">{revisionMode? 'Stop': 'Quit'}</Button>)\n  );\n\n  const revisionModeHeader = (\n    <>{isTicking? <Typography className=\"revision-mode-header\" variant=\"h5\" component=\"h6\" gutterBottom>{timeElapsedTxt}</Typography>: null}</>\n  );\n\n  const onQuit = () => {\n    if (revisionClicked.current || revisionMode) {\n      checkAndSetRevisionMode();\n    }else{\n      stopTimer();\n    }\n    setQuitDialog(false);\n    setTicking(false);\n  };\n  \n  return (\n    <>\n      <Layout hideNavDrawer={true} routeInfo={routerService.getRouteInfo('timer')}>\n        <QuitDialog open={openQuitDialog} onClose={() => {\n          revisionClicked.current = false;\n          setQuitDialog(false)\n        }} onQuit={onQuit}></QuitDialog>\n\n        {revisionSwitch}\n        {revisionMode ? null : studyModeHeader}\n        {revisionMode ? null : studyModeSlider}\n        {timerButtons}{revisionMode? revisionModeHeader: null}\n\n        <div className=\"table-cntr\">\n          <Typography variant=\"h5\" component=\"h6\" gutterBottom>\n            Learning history{totalMinutes ? `: ${Math.ceil(totalMinutes)} minutes spent learning` : null}\n          </Typography>\n          {\n            loading ? <LinearProgress color=\"secondary\" /> : studyHistory\n          }\n        </div>\n      </Layout>\n    </>\n  );\n}; ","import Notebooks from './Notebooks/Notebooks';\nimport Login from './Login/Login';\nimport Sections from './Sections/Sections';\nimport Pages from './Pages/Pages';\nimport Timer from './Timer/Timer';\n\nexport default {\n    Login,\n    Notebooks,\n    Sections,\n    Pages,\n    Timer\n};","import React, { useLayoutEffect } from 'react';\nimport Layout from '../../components/layout/layout';\nimport { routeConfig } from '../../services/config';\nimport mons from '../../services/microsoft-one-note.service';\nimport { routerService, userService } from '../../services';\nimport './login.scss';\n\n\nexport default (props: any) => {\n    useLayoutEffect(() => {\n        if (userService.isLoggedIn()) {\n            routerService.goTo('notebooks');\n        }\n    }, [props.history]);\n\n    function onSignInSuccess() {\n        routerService.goTo('notebooks');\n        // props.history.push(routeConfig.notebooks.path)\n    }\n\n    return (\n        <>\n            <Layout hideNavDrawer={true} routeInfo={routerService.getRouteInfo('login')}>\n                <div className=\"msal-login-btn\" onClick={() => mons.onSignIn().then(onSignInSuccess)}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"215\" height=\"41\" viewBox=\"0 0 215 41\"><title>MS-SymbolLockup</title><rect width=\"215\" height=\"41\" fill=\"#fff\"/><path d=\"M214,1V40H1V1H214m1-1H0V41H215V0Z\" fill=\"#8c8c8c\"/><path d=\"M45.812,25.082V23.288a2.849,2.849,0,0,0,.576.4,4.5,4.5,0,0,0,.707.3,5.513,5.513,0,0,0,.747.187,3.965,3.965,0,0,0,.688.065,2.937,2.937,0,0,0,1.637-.365,1.2,1.2,0,0,0,.538-1.062,1.16,1.16,0,0,0-.179-.649,1.928,1.928,0,0,0-.5-.5,5.355,5.355,0,0,0-.757-.435q-.437-.209-.935-.436c-.356-.19-.687-.383-1-.578a4.358,4.358,0,0,1-.8-.648,2.728,2.728,0,0,1-.534-.8,2.6,2.6,0,0,1-.194-1.047,2.416,2.416,0,0,1,.333-1.285,2.811,2.811,0,0,1,.879-.9,4.026,4.026,0,0,1,1.242-.528,5.922,5.922,0,0,1,1.42-.172,5.715,5.715,0,0,1,2.4.374v1.721a3.832,3.832,0,0,0-2.3-.645,4.106,4.106,0,0,0-.773.074,2.348,2.348,0,0,0-.689.241,1.5,1.5,0,0,0-.494.433,1.054,1.054,0,0,0-.19.637,1.211,1.211,0,0,0,.146.608,1.551,1.551,0,0,0,.429.468,4.276,4.276,0,0,0,.688.414c.271.134.584.28.942.436q.547.285,1.036.6a4.881,4.881,0,0,1,.856.7,3.015,3.015,0,0,1,.586.846,2.464,2.464,0,0,1,.217,1.058,2.635,2.635,0,0,1-.322,1.348,2.608,2.608,0,0,1-.868.892,3.82,3.82,0,0,1-1.257.5,6.988,6.988,0,0,1-1.5.155c-.176,0-.392-.014-.649-.04s-.518-.067-.787-.117a7.772,7.772,0,0,1-.761-.187A2.4,2.4,0,0,1,45.812,25.082Z\" fill=\"#5e5e5e\"/><path d=\"M55.129,16.426a1.02,1.02,0,0,1-.714-.272.89.89,0,0,1-.3-.688.916.916,0,0,1,.3-.7,1.008,1.008,0,0,1,.714-.278,1.039,1.039,0,0,1,.732.278.909.909,0,0,1,.3.7.9.9,0,0,1-.3.678A1.034,1.034,0,0,1,55.129,16.426Zm.842,9.074h-1.7V18h1.7Z\" fill=\"#5e5e5e\"/><path d=\"M65.017,24.9q0,4.131-4.153,4.131a6.187,6.187,0,0,1-2.556-.491V26.986a4.726,4.726,0,0,0,2.337.7,2.342,2.342,0,0,0,2.672-2.628V24.24h-.029a2.947,2.947,0,0,1-4.742.436,4.041,4.041,0,0,1-.838-2.684,4.738,4.738,0,0,1,.9-3.04,3,3,0,0,1,2.476-1.128,2.384,2.384,0,0,1,2.2,1.216h.029V18h1.7Zm-1.684-2.835v-.973a1.91,1.91,0,0,0-.524-1.352A1.718,1.718,0,0,0,61.5,19.18a1.793,1.793,0,0,0-1.512.714,3.217,3.217,0,0,0-.546,2,2.774,2.774,0,0,0,.524,1.769,1.678,1.678,0,0,0,1.387.662,1.805,1.805,0,0,0,1.429-.632A2.391,2.391,0,0,0,63.333,22.064Z\" fill=\"#5e5e5e\"/><path d=\"M73.908,25.5h-1.7V21.273q0-2.1-1.486-2.1a1.622,1.622,0,0,0-1.282.582,2.162,2.162,0,0,0-.5,1.469V25.5H67.229V18h1.707v1.245h.029A2.673,2.673,0,0,1,71.4,17.824a2.265,2.265,0,0,1,1.868.795,3.57,3.57,0,0,1,.644,2.3Z\" fill=\"#5e5e5e\"/><path d=\"M80.962,16.426a1.02,1.02,0,0,1-.714-.272.89.89,0,0,1-.3-.688.916.916,0,0,1,.3-.7,1.008,1.008,0,0,1,.714-.278,1.039,1.039,0,0,1,.732.278.909.909,0,0,1,.3.7.9.9,0,0,1-.3.678A1.034,1.034,0,0,1,80.962,16.426ZM81.8,25.5H80.1V18h1.7Z\" fill=\"#5e5e5e\"/><path d=\"M90.7,25.5H89V21.273q0-2.1-1.486-2.1a1.622,1.622,0,0,0-1.282.582,2.157,2.157,0,0,0-.506,1.469V25.5H84.023V18H85.73v1.245h.03a2.673,2.673,0,0,1,2.431-1.421,2.265,2.265,0,0,1,1.868.795,3.57,3.57,0,0,1,.644,2.3Z\" fill=\"#5e5e5e\"/><path d=\"M106.984,18l-2.212,7.5h-1.78l-1.361-5.083a3.215,3.215,0,0,1-.1-.659H101.5a3.069,3.069,0,0,1-.131.644l-1.48,5.1H98.145L95.939,18H97.7l1.363,5.405a3.16,3.16,0,0,1,.087.645H99.2a3.384,3.384,0,0,1,.117-.659L100.832,18h1.6l1.347,5.428a3.732,3.732,0,0,1,.095.644h.052a3.387,3.387,0,0,1,.11-.644L105.365,18Z\" fill=\"#5e5e5e\"/><path d=\"M109.1,16.426a1.018,1.018,0,0,1-.714-.272.886.886,0,0,1-.3-.688.912.912,0,0,1,.3-.7,1.006,1.006,0,0,1,.714-.278,1.039,1.039,0,0,1,.732.278.912.912,0,0,1,.3.7.9.9,0,0,1-.3.678A1.034,1.034,0,0,1,109.1,16.426Zm.841,9.074h-1.7V18h1.7Z\" fill=\"#5e5e5e\"/><path d=\"M116.117,25.42a2.955,2.955,0,0,1-1.31.248q-2.182,0-2.183-2.094V19.333h-1.253V18h1.253V16.264l1.7-.483V18h1.794v1.333h-1.794v3.75a1.484,1.484,0,0,0,.241.952,1.006,1.006,0,0,0,.807.285,1.167,1.167,0,0,0,.746-.248Z\" fill=\"#5e5e5e\"/><path d=\"M124.248,25.5h-1.7V21.4q0-2.226-1.487-2.226a1.556,1.556,0,0,0-1.26.644,2.568,2.568,0,0,0-.513,1.649V25.5h-1.707V14.4h1.707v4.849h.029a2.685,2.685,0,0,1,2.432-1.421q2.5,0,2.5,3.055Z\" fill=\"#5e5e5e\"/><path d=\"M141.907,25.5h-1.728V18.7q0-.835.1-2.043h-.029a6.992,6.992,0,0,1-.285.988L136.831,25.5h-1.2l-3.143-7.793a7.236,7.236,0,0,1-.277-1.047h-.029q.057.63.058,2.058V25.5h-1.611V15h2.453l2.762,7a10.884,10.884,0,0,1,.41,1.2h.036c.181-.551.327-.962.44-1.23L139.541,15h2.366Z\" fill=\"#5e5e5e\"/><path d=\"M145.158,16.426a1.022,1.022,0,0,1-.714-.272.89.89,0,0,1-.3-.688.916.916,0,0,1,.3-.7,1.009,1.009,0,0,1,.714-.278,1.043,1.043,0,0,1,.733.278.911.911,0,0,1,.3.7.9.9,0,0,1-.3.678A1.038,1.038,0,0,1,145.158,16.426ZM146,25.5h-1.7V18H146Z\" fill=\"#5e5e5e\"/><path d=\"M153.589,25.156a4.2,4.2,0,0,1-2.131.52,3.606,3.606,0,0,1-2.695-1.044,3.691,3.691,0,0,1-1.026-2.706,4.07,4.07,0,0,1,1.1-2.978,3.944,3.944,0,0,1,2.948-1.124,4.3,4.3,0,0,1,1.81.36v1.582a2.743,2.743,0,0,0-1.67-.586,2.32,2.32,0,0,0-1.766.728,2.665,2.665,0,0,0-.688,1.908,2.536,2.536,0,0,0,.648,1.838,2.3,2.3,0,0,0,1.739.674,2.716,2.716,0,0,0,1.729-.652Z\" fill=\"#5e5e5e\"/><path d=\"M159.625,19.619a1.4,1.4,0,0,0-.887-.242,1.513,1.513,0,0,0-1.259.682,3.04,3.04,0,0,0-.506,1.852V25.5h-1.7V18h1.7v1.545H157a2.606,2.606,0,0,1,.766-1.233,1.724,1.724,0,0,1,1.154-.444,1.432,1.432,0,0,1,.7.14Z\" fill=\"#5e5e5e\"/><path d=\"M164.02,25.676a3.719,3.719,0,0,1-2.773-1.051,3.8,3.8,0,0,1-1.036-2.787,3.7,3.7,0,0,1,3.991-4.014,3.6,3.6,0,0,1,2.739,1.033,3.986,3.986,0,0,1,.982,2.864,3.932,3.932,0,0,1-1.059,2.875A3.8,3.8,0,0,1,164.02,25.676Zm.08-6.5a1.938,1.938,0,0,0-1.575.7,2.913,2.913,0,0,0-.579,1.919,2.744,2.744,0,0,0,.586,1.856,1.965,1.965,0,0,0,1.568.678,1.87,1.87,0,0,0,1.542-.666,2.956,2.956,0,0,0,.538-1.9,3,3,0,0,0-.538-1.911A1.858,1.858,0,0,0,164.1,19.18Z\" fill=\"#5e5e5e\"/><path d=\"M169.182,25.266V23.691a3.392,3.392,0,0,0,2.1.725q1.539,0,1.538-.908a.714.714,0,0,0-.132-.436,1.241,1.241,0,0,0-.355-.318,2.784,2.784,0,0,0-.527-.25q-.3-.108-.677-.248a7.052,7.052,0,0,1-.832-.389,2.545,2.545,0,0,1-.615-.465,1.745,1.745,0,0,1-.37-.59,2.145,2.145,0,0,1-.125-.769,1.775,1.775,0,0,1,.256-.955,2.223,2.223,0,0,1,.69-.7,3.289,3.289,0,0,1,.98-.425,4.511,4.511,0,0,1,1.136-.143,5.181,5.181,0,0,1,1.86.315v1.487a3.136,3.136,0,0,0-1.816-.542,2.317,2.317,0,0,0-.582.066,1.472,1.472,0,0,0-.443.183.886.886,0,0,0-.286.282.669.669,0,0,0-.1.363.77.77,0,0,0,.1.41.93.93,0,0,0,.3.3,2.654,2.654,0,0,0,.483.234q.282.105.649.23a9.4,9.4,0,0,1,.867.4,2.886,2.886,0,0,1,.656.465,1.806,1.806,0,0,1,.417.6,2.034,2.034,0,0,1,.147.81,1.847,1.847,0,0,1-.264,1,2.205,2.205,0,0,1-.7.7,3.292,3.292,0,0,1-1.015.413,5.222,5.222,0,0,1-1.212.136A5.115,5.115,0,0,1,169.182,25.266Z\" fill=\"#5e5e5e\"/><path d=\"M179.443,25.676a3.717,3.717,0,0,1-2.772-1.051,3.793,3.793,0,0,1-1.036-2.787,3.7,3.7,0,0,1,3.991-4.014,3.6,3.6,0,0,1,2.739,1.033,3.986,3.986,0,0,1,.982,2.864,3.932,3.932,0,0,1-1.059,2.875A3.8,3.8,0,0,1,179.443,25.676Zm.08-6.5a1.936,1.936,0,0,0-1.574.7,2.908,2.908,0,0,0-.579,1.919,2.739,2.739,0,0,0,.586,1.856,1.964,1.964,0,0,0,1.567.678,1.868,1.868,0,0,0,1.542-.666,2.95,2.95,0,0,0,.539-1.9,2.99,2.99,0,0,0-.539-1.911A1.857,1.857,0,0,0,179.523,19.18Z\" fill=\"#5e5e5e\"/><path d=\"M189.067,15.781a1.533,1.533,0,0,0-.784-.2q-1.237,0-1.237,1.4V18h1.743v1.333h-1.736V25.5h-1.7V19.333h-1.282V18h1.282V16.784a2.362,2.362,0,0,1,.777-1.871,2.82,2.82,0,0,1,1.94-.684,2.879,2.879,0,0,1,1,.138Z\" fill=\"#5e5e5e\"/><path d=\"M194.23,25.42a2.955,2.955,0,0,1-1.31.248q-2.182,0-2.183-2.094V19.333h-1.253V18h1.253V16.264l1.7-.483V18h1.793v1.333h-1.793v3.75a1.484,1.484,0,0,0,.241.952,1,1,0,0,0,.806.285,1.165,1.165,0,0,0,.746-.248Z\" fill=\"#5e5e5e\"/><rect x=\"13\" y=\"11\" width=\"9\" height=\"9\" fill=\"#f25022\"/><rect x=\"13\" y=\"21\" width=\"9\" height=\"9\" fill=\"#00a4ef\"/><rect x=\"23\" y=\"11\" width=\"9\" height=\"9\" fill=\"#7fba00\"/><rect x=\"23\" y=\"21\" width=\"9\" height=\"9\" fill=\"#ffb900\"/></svg>\n                </div>\n            </Layout>\n        </>\n    );\n};\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Screens from './screens';\nimport { routeConfig } from './services/config';\n\nconst App: React.FC = () => {\n  useEffect(() => {\n    document.title = \"Spaced repetition for one note\";\n  }, []);\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path={routeConfig.notebooks.path} exact component={Screens.Notebooks} />\n        <Route path={routeConfig.login.path} exact component={Screens.Login} />\n        <Route path={routeConfig.sections.path} exact component={Screens.Sections} />\n        <Route path={routeConfig.pages.path} exact component={Screens.Pages} />\n        <Route path={routeConfig.timer.path} exact component={Screens.Timer} />\n        <Route path='/auth' exact component={Screens.Timer} />\n        <Redirect to={routeConfig.notebooks.path} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}